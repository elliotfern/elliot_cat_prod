{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,MAAM;AACnD,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,KAAK;AACL;;;;;;;;;;;;;;;ACnDA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oCAAoC;AACjF,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,YAAY,YAAY,IAAI,mBAAmB;AAC/F;AACA,4DAA4D,cAAc,uBAAuB,yBAAyB,YAAY,oCAAoC,kBAAkB;AAC5L,uGAAuG,uBAAuB,mBAAmB,YAAY,IAAI,cAAc,EAAE,iBAAiB;AAClM,0DAA0D,aAAa;AACvE,2DAA2D,kBAAkB;AAC7E,sEAAsE,mBAAmB;AACzF;AACA,gEAAgE,mBAAmB;AACnF;AACA,mBAAmB,uBAAuB,4BAA4B,YAAY;AAClF,qFAAqF,YAAY;AACjG;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;AC7DA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACwD;AACC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,2BAA2B,IAAI,EAAE,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oCAAoC;AACjF,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,+DAAW;AAC/C,yDAAyD;AACzD;AACA;AACA;AACA;AACA,qEAAqE,QAAQ,GAAG,QAAQ,GAAG,MAAM;AACjG;AACA;AACA;AACA;AACA;AACA,6DAA6D,kBAAkB,GAAG;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,cAAc,GAAG;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,8DAAU,SAAS;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,KAAK;AACL;;;;;;;;;;;;;;;AC1FA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,2BAA2B,IAAI,EAAE,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA,6CAA6C,oCAAoC;AACjF,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA,2DAA2D,IAAI;AAC/D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;AC1DA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,UAAU;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;AC/CwF;AACJ;AAChB;AACQ;AACuB;AACb;AAC/E;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6FAAe;AACvB,YAAY,iGAAiB;AAC7B,YAAY,iGAAiB;AAC7B,YAAY,iGAAiB;AAC7B,YAAY,iGAAiB;AAC7B,YAAY,iGAAiB;AAC7B,SAAS;AACT;AACA;AACA;AACA,gBAAgB,6EAAoB;AACpC,aAAa;AACb;AACA;AACA;AACA,QAAQ,qFAAgB,MAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qFAAgB;AACpC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,QAAQ,4GAAgB;AACxB;AACA;AACA;AACA;AACA,sCAAsC,uBAAuB,mBAAmB,iBAAiB;AACjG;AACA;AACA,kCAAkC,uBAAuB,yBAAyB,aAAa;AAC/F;AACA;AACA,YAAY,+FAAqB;AACjC,SAAS;AACT;AACA;;;;;;;;;;;;;;;AC/DA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,MAAM;AACnD,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;ACpEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,IAAI,GAAG,MAAM,GAAG,KAAK;AAClD;AACA;;;;;;;;;;;;;;;ACVO;AACP;AACA;AACA;AACA;;;;;;;UCJA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNiD;AACjD;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA,QAAQ,8DAAM;AACd;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA","sources":["webpack://elliotfern-intranet/./src/components/cinema/llistatPeliculaActors.ts","webpack://elliotfern-intranet/./src/components/cinema/llistatPelicules.ts","webpack://elliotfern-intranet/./src/components/lecturaDadesForm/mostrarDades/connexioApiDades.ts","webpack://elliotfern-intranet/./src/components/lecturaDadesForm/omplirDadesForm.ts","webpack://elliotfern-intranet/./src/components/lecturaDadesForm/selectOmplirDades.ts","webpack://elliotfern-intranet/./src/pages/cinema/funcions.ts","webpack://elliotfern-intranet/./src/utils/actualitzarDades.ts","webpack://elliotfern-intranet/./src/utils/formataData.ts","webpack://elliotfern-intranet/./src/utils/formataHtml.ts","webpack://elliotfern-intranet/webpack/bootstrap","webpack://elliotfern-intranet/webpack/runtime/define property getters","webpack://elliotfern-intranet/webpack/runtime/hasOwnProperty shorthand","webpack://elliotfern-intranet/webpack/runtime/make namespace object","webpack://elliotfern-intranet/./src/main.ts"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// author book\nexport function llistatPeliculaActors(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let urlAjax = 'https://gestio.elliotfern.com/api/cinema/get/?actors-pelicula=' + id;\n        try {\n            // Obtener el token del localStorage\n            let token = localStorage.getItem('token');\n            // Realizar la solicitud fetch\n            let response = yield fetch(urlAjax, {\n                method: 'GET',\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            if (!response.ok) {\n                throw new Error('Error en la sol·licitud AJAX');\n            }\n            let data = yield response.json();\n            let html = '';\n            for (let i = 0; i < data.length; i++) {\n                html += '<tr>';\n                html += '<td><img src=\"https://media.elliotfern.com/img/cinema-actor/' + data[i].nameImg + '.jpg\" alt=\"Descripción de la imagen\" width=\"auto\" height=\"150\"></td>';\n                html += '<td><a id=\"' + data[i].id + '\" title=\"Book page\" href=\"' + window.location.origin + '/biblioteca/llibre/' + data[i].slug + '\">' + data[i].nom + ' ' + data[i].cognoms + '</a></td>';\n                html += '<td>' + data[i].role + '</td>';\n                html += '<td><a href=\"' + window.location.origin + '/biblioteca/modifica/llibre/' + data[i].id + '\" class=\"btn btn-secondary btn-sm modificar-link\">Modificar</a></td>';\n                html += '<td><button type=\"button\" onclick=\"btnDeleteBook(' + data[i].id + ')\" class=\"btn btn-sm btn-danger\" data-bs-toggle=\"modal\" data-bs-target=\"#modalDeleteBook\" data-id=\"' + data[i].id + '\">Elimina</button></td>';\n                html += '</tr>';\n            }\n            // Actualizar el contenido del tbody\n            const tbody = document.querySelector('#booksAuthor tbody');\n            if (tbody) {\n                tbody.innerHTML = html;\n            }\n            else {\n                console.error('Elemento tbody no encontrado');\n            }\n        }\n        catch (error) {\n            console.error('Error al parsear JSON:', error); // Muestra el error de parsing\n        }\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function llistatPelicules(tipus) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Si se selecciona \"Tots\", no pasamos ningún tipo de contacto como parámetro\n        let urlAjax = '/api/cinema/get/';\n        // Si 'tipus' es 10, añadir el parámetro adecuado a la URL\n        if (tipus === 10) {\n            urlAjax += '?pelicules';\n        }\n        else {\n            urlAjax += '?type=generes&generes=' + tipus;\n        }\n        try {\n            const response = yield fetch(urlAjax, {\n                method: 'GET',\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token') || ''}`,\n                },\n            });\n            if (!response.ok) {\n                throw new Error('Error en la solicitud AJAX');\n            }\n            const data = yield response.json();\n            // Aquí puedes manejar los datos recibidos\n            // Modificaciones del DOM\n            let pelicules = '';\n            data.forEach((pelicula) => {\n                pelicules += `\n      <div class=\"col-sm-3 col-md-3 quadre\">\n        <h6><span style=\"background-color:black;color:white;padding:5px;\">${pelicula.genere_ca}</span></h6>\n    \n        <h3 class=\"links-contactes\" style=\"margin-top: 15px;\"> <a href=\"${window.location.origin}/cinema/fitxa-pelicula/${pelicula.id}\" title=\"Fitxa de la pel·lícula\" >${pelicula.pelicula}</a></h3>`;\n                pelicules += `<p class=\"links-contactes autor\"><strong>Director/a:</strong> <a href=\"${window.location.origin}/cinema/director/${pelicula.id}\">${pelicula.nom} ${pelicula.cognoms}</a></p>`;\n                pelicules += `<p><strong>Any: </strong> ${pelicula.any}</p>`;\n                pelicules += `<p><strong>País: </strong> ${pelicula.pais_cat}</p>`;\n                pelicules += `<p><strong>Idioma original: </strong> ${pelicula.idioma_ca}</p>`;\n                pelicules += `\n        <p><button type='button' class='btn btn-light btn-sm'>${pelicula.genere_ca}</button></p>`;\n                pelicules += `\n        <a href=\"${window.location.origin}/cinema/modifica-pelicula/${pelicula.id}\" class=\"btn btn-secondary btn-sm modificar-link\">Modificar</a>\n        <button type='button' class='btn btn-dark btn-sm' onclick='eliminaContacte(${pelicula.id})'>Eliminar</button>\n        </div>`;\n            });\n            const peliculesContainer = document.getElementById('peliculesContainer');\n            if (peliculesContainer) {\n                peliculesContainer.innerHTML = pelicules;\n            }\n        }\n        catch (error) {\n            console.error('Error:', error);\n        }\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { formatData } from '../../../utils/formataData';\nimport { formataHTML } from '../../../utils/formataHtml';\n// FUNCIÓ PER DEMANAR PER GET INFORMACIO A LA BD I MOSTRAR-LA EN PANTALLA\n/**\n * Funció per realitzar una sol·licitud GET a l'API i obtenir dades.\n * @param url - L'URL de l'API per obtenir les dades.\n * @param id - L'ID de l'element a obtenir.\n * @param urlImg1 - L'URL de la primera imatge.\n * @param urlImg2 - L'URL de la segona imatge.\n * @param callback - La funció de callback que es cridarà amb les dades obtingudes.\n */\n// Función para realizar la solicitud Axios a la API\nexport function connexioApiDades(url, id, urlImg1, urlImg2, callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const urlAjax = `${url}${id}`;\n        // Obtener el token del localStorage\n        let token = localStorage.getItem('token');\n        try {\n            const response = yield fetch(urlAjax, {\n                method: 'GET',\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token') || ''}`,\n                },\n            });\n            if (!response.ok) {\n                throw new Error('Error en la sol·licitud AJAX');\n            }\n            const data = yield response.json();\n            callback(data);\n            // Asegúrate de que data sea un objeto o array adecuado\n            const data2 = Array.isArray(data) ? data[0] : data;\n            for (let key in data2) {\n                if (data2.hasOwnProperty(key)) {\n                    let value = data2[key];\n                    // Buscar el elemento `<span>` con el ID correspondiente\n                    const element = document.getElementById(key);\n                    if (element) {\n                        // Verificar que el elemento es un `<span>` antes de modificar\n                        if (element.tagName === 'SPAN') {\n                            // Decodificar HTML si es necesario y asignar solo el texto\n                            value = formataHTML(value);\n                            element.textContent = value; // Solo reemplazar el contenido del `span`\n                        }\n                    }\n                    // Actualizar el DOM con la información recibida\n                    if (key === 'nameImg') {\n                        element.src = `http://media.elliotfern.com/${urlImg1}/${urlImg2}/${value}.jpg`;\n                    }\n                    // Casos especiales: Director/a\n                    if (key === 'nom' || key === 'cognoms') {\n                        const directorUrl = document.getElementById('directorUrl');\n                        if (directorUrl && directorUrl.tagName === 'A') {\n                            directorUrl.href = `/directors/${data2['director']}`; // Añadir la URL del director\n                        }\n                    }\n                    // Casos especiales: País\n                    if (key === 'pais_cat') {\n                        const paisUrl = document.getElementById('paisUrl');\n                        if (paisUrl && paisUrl.tagName === 'A') {\n                            paisUrl.href = `/paisos/${data2['pais']}`; // Añadir la URL del país\n                        }\n                    }\n                    // Formatear fechas si es necesario\n                    if (key === 'dateCreated' || key === 'dateModified' || key === 'dataVista') {\n                        const dateElement = document.getElementById(key);\n                        if (dateElement && dateElement.tagName === 'SPAN') {\n                            dateElement.textContent = formatData(value); // Formatear y agregar la fecha\n                        }\n                    }\n                }\n            }\n            // Ejecutar la función de devolución de llamada si se proporciona\n            if (typeof callback === 'function') {\n                callback(data);\n            }\n        }\n        catch (error) {\n            console.error('Error al parsear JSON:', error); // Muestra el error de parsing\n        }\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * Funció per omplir els inputs text i select de les pàgines de formularis de modificació.\n * @param url - L'URL de l'API per obtenir les dades.\n * @param id - L'ID de l'element a obtenir.\n * @param formId - L'ID del formulari HTML que s'omplirà.\n * @param callback - La funció de callback que es cridarà amb les dades obtingudes.\n */\nexport function omplirDadesForm(url, id, formId, callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const urlAjax = `${url}${id}`;\n        try {\n            const response = yield fetch(urlAjax, {\n                method: 'GET',\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token') || ''}`,\n                },\n            });\n            if (!response.ok) {\n                throw new Error('Error en la sol·licitud AJAX');\n            }\n            const data = yield response.json();\n            callback(data);\n            // Omplir el formulari amb les dades obtingudes\n            const form = document.getElementById(formId);\n            if (!form) {\n                console.error(`Form with id ${formId} not found`);\n                return;\n            }\n            Object.keys(data[0]).forEach((key) => {\n                const input = form.querySelector(`[name=\"${key}\"]`);\n                if (input) {\n                    input.value = data[0][key];\n                }\n            });\n            // Carregar contingut en l'editor Trix si està present\n            const trixEditor = document.querySelector('trix-editor');\n            if (trixEditor) {\n                const trixInput = document.querySelector('input[name=\"descripcio\"]');\n                if (trixInput) {\n                    trixInput.value = data[0]['descripcio'];\n                    trixEditor.editor.loadHTML(data[0]['descripcio']);\n                }\n            }\n        }\n        catch (error) {\n            console.error('Error:', error);\n        }\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/**\n * Funció per omplir un select amb dades auxiliars.\n * @param url - L'URL de l'API per obtenir les dades auxiliars.\n * @param selectedValue - El valor seleccionat actualment.\n * @param selectId - L'ID del select HTML que s'omplirà.\n * @param valueField - El camp de les dades que s'utilitzarà com a valor del select.\n * @param textField - El camp de les dades que s'utilitzarà com a text del select.\n */\nexport function selectOmplirDades(url, selectedValue, selectId, textField) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const response = yield fetch(url);\n            if (!response.ok) {\n                throw new Error('Error en la sol·licitud AJAX');\n            }\n            const data = yield response.json();\n            const selectElement = document.getElementById(selectId);\n            if (!selectElement) {\n                console.error(`Select element with id ${selectId} not found`);\n                return;\n            }\n            // Netejar les opcions actuals\n            selectElement.innerHTML = '';\n            // Afegir les noves opcions\n            data.forEach((item) => {\n                const option = document.createElement('option');\n                option.value = item.id;\n                option.text = item[textField];\n                if (item.id === selectedValue) {\n                    option.selected = true;\n                }\n                selectElement.appendChild(option);\n            });\n        }\n        catch (error) {\n            console.error('Error:', error);\n        }\n    });\n}\n","import { selectOmplirDades } from '../../components/lecturaDadesForm/selectOmplirDades';\nimport { omplirDadesForm } from '../../components/lecturaDadesForm/omplirDadesForm';\nimport { formulariActualitzar } from '../../utils/actualitzarDades';\nimport { llistatPelicules } from '../../components/cinema/llistatPelicules';\nimport { connexioApiDades } from '../../components/lecturaDadesForm/mostrarDades/connexioApiDades';\nimport { llistatPeliculaActors } from '../../components/cinema/llistatPeliculaActors';\nexport function cinema() {\n    // Verificar la URL y llamar a las funciones correspondientes\n    const normalizedPath = window.location.pathname.replace(/\\/$/, '');\n    const pathArray = normalizedPath.split('/');\n    const pageType = pathArray[pathArray.length - 2];\n    const idElement = Number(pathArray[pathArray.length - 1]);\n    console.log(pathArray);\n    if (pageType === 'modifica-pelicula') {\n        // Inicialitzar l'editor Trix\n        omplirDadesForm('/api/cinema/get/?pelicula=', idElement, 'peli', function (data) {\n            selectOmplirDades('/api/auxiliars/get/?type=directors', data[0].director, 'director', 'nomComplet');\n            selectOmplirDades('/api/auxiliars/get/?type=imgPelis', data[0].img, 'img', 'alt');\n            selectOmplirDades('/api/auxiliars/get/?type=generesPelis', data[0].genere, 'genere', 'genere_ca');\n            selectOmplirDades('/api/auxiliars/get/?type=llengues', data[0].lang, 'lang', 'idioma_ca');\n            selectOmplirDades('/api/auxiliars/get/?type=paisos', data[0].pais, 'pais', 'pais_cat');\n        });\n        const peli = document.getElementById('peli');\n        if (peli) {\n            peli.addEventListener('submit', function (event) {\n                formulariActualitzar(event, 'peli', '/api/cinema/put/?type=pelicula');\n            });\n        }\n    }\n    else if (pageType === 'pelicules') {\n        llistatPelicules(10); // Pasar 10 como parámetro para mostrar todas las películas al cargar la página\n        // Manejar clic en los botones de tipo de contacto\n        document.querySelectorAll('button[data-tipus]').forEach((button) => {\n            button.addEventListener('click', (event) => {\n                const target = event.target;\n                const tipus = target.getAttribute('data-tipus');\n                if (tipus) {\n                    llistatPelicules(Number(tipus));\n                    // Remover la clase 'active' de todos los botones\n                    document.querySelectorAll('button[data-tipus]').forEach((btn) => {\n                        btn.classList.remove('active');\n                    });\n                    // Agregar la clase 'active' solo al botón clicado\n                    target.classList.add('active');\n                }\n            });\n        });\n    }\n    else if (pageType === 'fitxa-pelicula') {\n        connexioApiDades('/api/cinema/get/?pelicula=', idElement, 'img', 'cinema-movie', function (data) {\n            // Actualiza el atributo href del enlace con el idDirector\n            const directorUrl = document.getElementById('directorUrl');\n            const paisUrl = document.getElementById('paisUrl');\n            if (directorUrl) {\n                directorUrl.href = `${window.location.origin}/cinema/director/${data[0].director}`;\n            }\n            if (paisUrl) {\n                paisUrl.href = `${window.location.origin}/cinema/pelicules/pais/${data[0].pais}`;\n            }\n            // author book\n            llistatPeliculaActors(data[0].id);\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// AJAX PROCESS > PHP API : PER ACTUALIZAR FORMULARIS A LA BD\nexport function formulariActualitzar(event, formId, urlAjax) {\n    return __awaiter(this, void 0, void 0, function* () {\n        event.preventDefault();\n        const form = document.getElementById(formId);\n        if (!form) {\n            console.error(`Form with id ${formId} not found`);\n            return;\n        }\n        // Crear un objeto para almacenar los datos del formulario\n        const formData = {};\n        new FormData(form).forEach((value, key) => {\n            formData[key] = value; // Agregar cada campo al objeto formData\n        });\n        const jsonData = JSON.stringify(formData);\n        const token = localStorage.getItem('token');\n        if (!token) {\n            console.error('Token not found in localStorage');\n            return;\n        }\n        try {\n            const response = yield fetch(urlAjax, {\n                method: 'PUT',\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: `Bearer ${token}`,\n                },\n                body: jsonData,\n            });\n            if (!response.ok) {\n                throw new Error('Error en la sol·licitud AJAX');\n            }\n            const data = yield response.json();\n            // Aquí pots afegir el codi per gestionar la resposta\n            const missatgeOk = document.getElementById('missatgeOk');\n            const missatgeErr = document.getElementById('missatgeErr');\n            if (data.status === 'success') {\n                if (missatgeOk && missatgeErr) {\n                    missatgeOk.style.display = 'block';\n                    missatgeErr.style.display = 'none';\n                }\n            }\n            else {\n                if (missatgeOk && missatgeErr) {\n                    missatgeErr.style.display = 'block';\n                    missatgeOk.style.display = 'none';\n                }\n            }\n        }\n        catch (error) {\n            const missatgeOk = document.getElementById('missatgeOk');\n            const missatgeErr = document.getElementById('missatgeErr');\n            if (missatgeOk && missatgeErr) {\n                console.error('Error:', error);\n                missatgeErr.style.display = 'block';\n                missatgeOk.style.display = 'none';\n            }\n        }\n    });\n}\n","export function formatData(inputDate) {\n    // Analizar la fecha en formato 'YYYY-MM-DD HH:mm:ss'\n    const date = new Date(inputDate);\n    // Extraer los componentes de la fecha\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    // Formatear la fecha en formato 'DD-MM-YYYY'\n    const formattedDate = `${day}-${month}-${year}`;\n    return formattedDate;\n}\n","export function formataHTML(texto) {\n    var temp = document.createElement('div');\n    temp.innerHTML = texto;\n    return temp.textContent || temp.innerText || '';\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { cinema } from './pages/cinema/funcions';\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Verificar la URL y llamar a las funciones correspondientes\n    const normalizedPath = window.location.pathname.replace(/\\/$/, '');\n    const pathArray = normalizedPath.split('/');\n    const pageType = pathArray[pathArray.length - 3]; // Obtenemos el nombre de la página\n    if (pageType === 'cinema') {\n        cinema();\n    }\n});\n// AJAX PROCESS > PHP API : PER INSERIR FORMULARIS A LA BD\n/*\nfunction formulariInserir(event, formId, urlAjax) {\n  // Stop form from submitting normally\n  event.preventDefault();\n  let formData = $('#' + formId).serialize();\n\n  $.ajax({\n    type: 'POST',\n    url: urlAjax,\n    dataType: 'json',\n    beforeSend: function (xhr) {\n      // Obtener el token del localStorage\n      let token = localStorage.getItem('token');\n\n      // Incluir el token en el encabezado de autorización\n      xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n    },\n    data: formData,\n    success: function (response) {\n      if (response.status == 'success') {\n        // Add response in Modal body\n        $('#creaOk').show();\n        $('#creaErr').hide();\n      } else {\n        $('#creaErr').show();\n        $('#creaOk').hide();\n      }\n    },\n  });\n}\n*/\n"],"names":[],"sourceRoot":""}